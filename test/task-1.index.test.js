const chai = require("chai");
const should = chai.should();

const testData = [
    {
        value: [1, 2, 3, 4, 5, 120],
        expected: 5
    },
    {
        value: [-1, 22, 140, 9, 11, 10938],
        expected: 9
    },
    {
        value: [1, 11, 120, 0, 12, 90],
        expected: 1
    },
    {
        value: [730, 179, 740, 235, 871, 491, 43, 841, 371, 888, 587, 427, 368, 816, 730, 418, 680, 797, 460, 445, 598, 447, 733, 205, 479, 38, 714, 22, 415, 862, 954, 10, 255, 385, 890, 758, 867, 959, 369, 667, 260, 56, 598, 992, 245, 689, 227, 590, 338, 608, 152, 633, 250, 188, 786, 347, 302, 560, 286, 225, 374, 409, 154, 121, 574, 608, 910, 264, 917, 228, 862, 664, 526, 543, 659, 201, 931, 247, 906, 735, 828, 629, 71, 174, 168, 791, 355, 209, 516, 594, 155, 7, 633, 492, 376, 77, 749, 582, 242, 494, 712, 116, 891, 356, 213, 978, 848, 769, 959, 487, 243, 284, 259, 587, 375, 923, 133, 677, 603, 846, 941, 61, 281, 246, 381, 251, 359, 451, 383, 617, 576, 343, 905, 405, 487, 673, 322, 506, 673, 661, 139, 446, 515, 604, 425, 472, 92, 879, 95, 844, 652, 902, 813, 25, 762, 288, 534, 954, 311, 694, 205, 476, 684, 78, 316, 189, 402, 64, 840, 719, 53, 940, 653, 808, 133, 265, 570, 646, 516, 188, 495, 430, 373, 933, 15, 178, 91, 714, 776, 181, 242, 657, 532, 188, 482, 941, 533, 547, 508, 210, 159, 64, 600, 109, 271, 468, 155, 619, 410, 548, 141, 543, 124, 622, 117, 226, 123, 475, 397, 389, 342, 803, 817, 592, 769, 109, 246, 911, 544, 28, 923, 423, 416, 430, 528, 992, 49, 31, 686, 292, 959, 229, 148, 726, 729, 167, 856, 561, 865, 575, 432, 687, 844, 847, 483, 292, 170, 39, 199, 967, 525, 754, 913, 690, 332, 460, 521, 281, 573, 91],
        expected: 7
    },
    {
        value: [418, 864, 118, 815, 605, 749, 833, 668, 510, 843, 367, 69, 462, 957, 80, 419, 776, 22, 262, 251, 535, 678, 795, 150, 586, 2, 7, 722, 938, 567, 729, 446, 659, 948, 952, 450, 44, 338, 730, 691, 301, 336, 442, 11, 822, 887, 924, 796, 637, 812, 437, 30, 980, 317, 954, 733, 148, 512, 366, 328, 494, 902, 935, 148, 1, 838, 993, 437, 172, 121, 872, 776, 831, 264, 127, 395, 428, 965, 57, 232, 845, 807, 63, 10, 731, 64, 315, 268, 116, 987, 386, 530, 460, 908, 20, 950, 372, 223, 895, 543, 688, 313, 508, 395, 858, 515, 54, 99, 484, 827, 788, 772, 716, 359, 819, 544, 28, 346, 214, 175, 184, 875, 289, 758, 825, 505, 77, 864, 580, 740, 877, 348, 481, 147, 25, 151, 826, 224, 725, 626, 140, 826, 401, 74, 28, 264, 107, 630, 765, 235, 536, 123, 16, 604, 613, 814, 792, 509, 517, 565, 65, 976, 372, 96, 506, 531, 185, 425, 514, 575, 379, 859, 452, 139, 787, 324, 272, 671, 590, 357, 661, 860, 154, 222, 500, 600, 131, 242, 828, 335, 165, 906, 11, 87, 927, 160, 861, 348, 542, 650, 47, 384, 389, 572, 616, 385, 410, 831, 822, 784, 940, 133, 795, 3, 741, 671, 319, 89, 371, 188, 500, 773, 130, 351, 56, 491, 482, 747, 138, 192, 547, 258, 161, 660, 677, 414, 700, 752, 331, 255, 342, 695, 299, 936, 334, 924, 282, 128, 392, 315, 591, 460, 158, 908, 44, 538, 774, 694, 690, 655, 223, 48, 454, 531, 29, 911, 271, 165, 542, 671, 955, 847, 240, 543, 156, 669, 888, 625, 478, 415, 121, 928, 159, 785, 312, 443, 981, 590, 787, 616, 390, 563, 633, 685, 827, 554, 614, 580, 339, 367],
        expected: 7
    },
    {
        value: [185, 176, 928, 135, 830, 13, 621, 953, 500, 370, 415, 567, 721, 34, 668, 166, 45, 749, 663, 89, 104, 241, 208, 295, 345, 299, 419, 924, 413, 759, 277, 379, 964, 876, 259, 514, 935, 356, 913, 888, 821, 863, 782, 384, 872, 682, 603, 380, 588, 67, 56, 969, 317, 359, 703, 265, 284, 284, 427, 625, 851, 740, 137, 343, 272, 781, 994, 302, 661, 42, 937, 215, 423, 313, 598, 403, 764, 895, 749, 898, 167, 994, 385, 113, 542, 441, 367, 722, 423, 969, 934, 15, 447, 698, 348, 50, 435, 422, 761, 601, 559, 949, 600, 896, 891, 67, 452, 384, 35, 5, 215, 885, 707, 600, 789, 161, 382, 266, 261, 976, 909, 418, 894, 266, 23, 323, 409, 419, 514, 225, 137, 675, 933, 112, 676, 681, 498, 419, 694, 107, 622, 491, 894, 740, 117, 746, 361, 928, 701, 577, 765, 839, 335, 633, 385, 814, 923, 99, 580, 534, 627, 958, 244, 24, 4, 839, 607, 77, 715, 986, 28, 34, 294, 570, 5, 809, 91, 335, 339, 159, 213, 234, 856, 175, 409, 880, 899, 310, 153, 569, 49, 442, 103, 403, 900, 885, 373, 369, 58, 295, 700, 132, 551, 77, 841, 733, 110, 356, 66, 873, 942, 368, 155, 17, 575, 705, 686, 953, 948, 624, 709, 731, 6, 815, 572, 221, 391, 281, 446, 387, 704, 389, 886, 10, 908, 692, 652, 685, 686, 276, 738, 171, 794, 601, 942, 156, 812, 375, 380, 857, 17, 872, 706, 560, 774, 334, 877, 699, 170, 283, 430, 991, 160, 597, 751, 383, 772, 971, 747, 805, 651, 775, 826, 210, 201, 593, 152, 113, 213, 518, 49, 547, 819, 745, 941, 136, 883, 891, 997, 594, 509, 439, 256, 229, 15, 170, 642, 828, 713, 107],
        expected: 6
    },
]

const solution = require("../task-1/index");

describe("Task 1 testing", function () {

    context("Maximum positive integer with one digit in an array of integers.", function () {

        for (let test of testData) {

            it(`Should return ${test.expected}`, function () {

                solution(test.value).should.equal(test.expected);
            })
        }
    })
})